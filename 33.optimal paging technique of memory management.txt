Copy to BlackBox#include <stdio.h>
#include <stdlib.h>

#define FRAME_SIZE 3
#define PAGE_SIZE 10

void optimalPageReplacement(int pages[], int n) {
    int frame[FRAME_SIZE];
    int pageFaults = 0;
    int i, j, k, pos, max, flag;

    for (i = 0; i < FRAME_SIZE; i++)
        frame[i] = -1;

    for (i = 0; i < n; i++) {
        flag = 0;
        for (j = 0; j < FRAME_SIZE; j++) {
            if (frame[j] == pages[i]) {
                flag = 1;
                break;
            }
        }

        if (flag == 0) {
            pageFaults++;
            if (frame[i % FRAME_SIZE] == -1) {
                frame[i % FRAME_SIZE] = pages[i];
            } else {
                max = -1;
                pos = -1;
                for (j = 0; j < FRAME_SIZE; j++) {
                    int found = 0;
                    for (k = i + 1; k < n; k++) {
                        if (frame[j] == pages[k]) {
                            found = 1;
                            if (k > max) {
                                max = k;
                                pos = j;
                            }
                            break;
                        }
                    }
                    if (!found) {
                        pos = j;
                        break;
                    }
                }
                frame[pos] = pages[i];
            }
        }

        printf("Frames: ");
        for (j = 0; j < FRAME_SIZE; j++) {
            if (frame[j] != -1)
                printf("%d ", frame[j]);
        }
        printf("\n");
    }
    printf("Total Page Faults: %d\n", pageFaults);
}

int main() {
    int pages[PAGE_SIZE] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3};
    int n = sizeof(pages) / sizeof(pages[0]);
    optimalPageReplacement(pages, n);
    return 0;
}
