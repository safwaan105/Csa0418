#include <stdio.h>
#include <stdlib.h>

#define MAX_FILES 10
#define BLOCK_SIZE 1024

typedef struct {
    int block_number;
    char data[BLOCK_SIZE];
} Block;

typedef struct {
    Block blocks[MAX_FILES];
    int index[MAX_FILES];
    int file_count;
} FileSystem;

void initialize_file_system(FileSystem *fs) {
    fs->file_count = 0;
    for (int i = 0; i < MAX_FILES; i++) {
        fs->index[i] = -1;
    }
}

int allocate_block(FileSystem *fs) {
    if (fs->file_count < MAX_FILES) {
        return fs->file_count++;
    }
    return -1; // No more blocks available
}

void write_file(FileSystem *fs, int file_index, const char *data) {
    if (file_index >= 0 && file_index < fs->file_count) {
        fs->blocks[file_index].block_number = file_index;
        snprintf(fs->blocks[file_index].data, BLOCK_SIZE, "%s", data);
        fs->index[file_index] = file_index;
    }
}

void read_file(FileSystem *fs, int file_index) {
    if (file_index >= 0 && file_index < fs->file_count) {
        printf("File Block %d: %s\n", file_index, fs->blocks[file_index].data);
    }
}

int main() {
    FileSystem fs;
    initialize_file_system(&fs);

    int file1 = allocate_block(&fs);
    write_file(&fs, file1, "Hello, World!");

    int file2 = allocate_block(&fs);
    write_file(&fs, file2, "File System Simulation");

    read_file(&fs, file1);
    read_file(&fs, file2);

    return 0;
}
